version: '3.7'
services:
    db:
        image: mariadb
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
            MYSQL_DATABASE: '${DB_NAME}'
            MYSQL_USER: '${DB_USER}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
        volumes:
            - './data/db_data:/var/lib/mysql'
    wordpress:
        depends_on:
            - db
        image: 'wordpress:5-php7.4-fpm'
        restart: unless-stopped
        volumes:
            - './data/wp_data:/var/www/html'
            - './config/php/php.ini:/usr/local/etc/php/conf.d/php.ini'
        environment:
            WORDPRESS_DB_HOST: 'db:3306'
            WORDPRESS_DB_USER: '${DB_USER}'
            WORDPRESS_DB_PASSWORD: '${DB_PASSWORD}'
            WORDPRESS_DB_NAME: '${DB_NAME}'
            WORDPRESS_TABLE_PREFIX: '${TABLE_PREFIX}'
    nginx:
        image: nginx
        depends_on:
            - wordpress
            - db
        restart: unless-stopped
        volumes:
            - './data/wp_data:/var/www/html'
            - './config/nginx/nginx.conf.template:/etc/nginx/conf.d/nginx.conf.template'
            - './log/nginx:/var/log/nginx'
        environment:
            - 'PROJECT_BASE_URL=${PROJECT_BASE_URL}'
        command: '/bin/bash -c "envsubst ''$$PROJECT_BASE_URL'' < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/conf.d/default.conf && exec nginx -g ''daemon off;''"'
        labels:
            - 'traefik.http.routers.${PROJECT_NAME}_nginx.rule=Host(`wp.${PROJECT_BASE_URL}`)'
    phpmyadmin:
        image: 'phpmyadmin/phpmyadmin:latest'
        restart: unless-stopped
        depends_on:
            - db
        environment:
            PMA_HOST: db
            PMA_PORT: 3306
            MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
        labels:
            - 'traefik.http.routers.${PROJECT_NAME}_pma.rule=Host(`pma.${PROJECT_BASE_URL}`)'
            - 'traefik.http.routers.${PROJECT_NAME}_pma.entrypoints=websecure'
            - 'traefik.http.routers.${PROJECT_NAME}_pma.tls.certresolver=myhttpchallenge'
            - 'traefik.enable=true'
    varnish:
        image: wodby/varnish
        restart: unless-stopped
        depends_on:
            - nginx
        environment:
            VARNISH_SECRET: secret
            VARNISH_BACKEND_HOST: nginx
            VARNISH_BACKEND_PORT: 80
            VARNISH_CONFIG_PRESET: wordpress
            VARNISH_ALLOW_UNRESTRICTED_PURGE: 1
            VARNISH_CACHE_STATIC_FILES: 1
        labels:
            - 'traefik.http.services.${PROJECT_NAME}_varnish.loadbalancer.server.port=6081'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.rule=Host(`${PROJECT_BASE_URL}`)||Host(`www.${PROJECT_BASE_URL}`)'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.tls.domains[0].main=${PROJECT_BASE_URL}'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.tls.domains[0].sans=www.${PROJECT_BASE_URL}'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.entrypoints=websecure'
            - 'traefik.http.routers.${PROJECT_NAME}_varnish.tls.certresolver=myhttpchallenge'
            - 'traefik.enable=true'

    #  traefik:
    #    restart: unless-stopped
    #     image: 'traefik:v2.0'
    #     command:
    #         - '--log.level=DEBUG'
    #         - '--api.insecure=true'
    #         - '--providers.docker=true'
    #         - '--providers.docker.exposedbydefault=false'
    #         - '--entrypoints.web.address=:80'
    #         - '--entrypoints.websecure.address=:443'
    #         - '--certificatesresolvers.myhttpchallenge.acme.httpchallenge=true'
    #         - '--certificatesresolvers.myhttpchallenge.acme.httpchallenge.entrypoint=web'
    #         - '--certificatesresolvers.myhttpchallenge.acme.email=contact@domain.com'
    #         - '--certificatesresolvers.myhttpchallenge.acme.storage=/letsencrypt/acme.json'
    #     ports:
    #         - '80:80'
    #         - '443:443'
    #         - '8080:8080'
    #     volumes:
    #         - '/var/run/docker.sock:/var/run/docker.sock'
    #         - './data/letsencrypt:/letsencrypt'
